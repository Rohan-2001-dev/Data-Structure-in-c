/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include<string.h>
#define Max 10
int queue[Max],rear=-1,front=-1;
int Qfull(){
    if(rear>=Max)
      return 1;
    return 0;
    
}
int Qempty(){
    if(rear<front)
      return 1;
    return 0;
    
}
void insert_in_rear(int data){
     rear++;
    queue[rear]=data;
    
}
void insert_in_front(int data){
    int i;
    if(front==-1){
      front++;
      if(queue[front]==-1)
            queue[front]=data;
    }
    if(front>0)
    {
        if(queue[front]==-1)
            queue[front]=data;
        else if(front-1>=0){
            queue[--front]=data;
        }
    }
    else{
        if(rear+1!=Max){
            i=rear;
            for(;i>=front;i--){
                queue[i+1]=queue[i];
            }
            queue[front]=data;
            rear++;
        }
    }
    
    
}
int del_from_rear(){
    int i;
    i=queue[rear];
    queue[rear]=-1;
    rear--;
    return i;
}
int del_from_front(){
    int i;
    i=queue[front];
    queue[front]=-1;
    front++;
    return i;
}

void enqueue(int data){
    int i;
    printf("enter where to insert data from rear=1 and front=0: ");
    scanf("%d",&i);
    if(i==1)
      insert_in_rear(data);
    else if(!Qempty())
      insert_in_front(data);

}
int dequeue(){
    int i;
    
    printf("enter where to delete data from rear=1 and front=0: ");
    scanf("%d",&i);
    if(i==1)
      del_from_rear();
    else
      del_from_front();
}
void display(){
    int i;
    for(i=front;i<=rear;i++)
     printf("%d",queue[i]);
}
int main()
{
  int i;
  for(i=0;i<Max;i++)
    queue[i]=-1;
  while(1){
      printf("enter operation perform onto queue :");
      scanf("%d",&i);
      switch(i){
          case 1:if(Qfull())
                 printf("The queue is full cannot insert data anymore:");
                 else{
                     printf("enter the data to be inserted into queue : ");
                     scanf("%d",&i);
                     enqueue(i);
                 }
                 break;
          case 2:if(Qempty())
                   printf("queue is empty ");
                 else{
                     printf("%d",dequeue());
                 }
                 break;
          case 3:
                   display();
                break;
          
          case 4:exit(0);
                break;
      }
      
  }
    return 0;
}
